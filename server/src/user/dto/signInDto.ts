import { Field, InputType } from '@nestjs/graphql';
import { IsEnum } from 'class-validator';

export enum SignInType {
  EMAIL = 'EMAIL',
  GOOGLE = 'GOOGLE',
  FACEBOOK = 'FACEBOOK',
  NAVER = 'NAVER',
  KAKAO = 'KAKAO',
  APPLE = 'APPLE',
}

//@todo : 파샬 타입으로 가져오는것을 원해.
@InputType()
export class SignInDto {
  //graphql 요청시 해당 반드시 포함되어야 한다.
  //@IsNotEmpty()가 있으면
  //@IsNotEmpty()가 없다면 요청시에 필드만 포한 하고 '' 가 가능하다.
  @Field({ description: '로그인타입' })
  @IsEnum(SignInType, { message: '지원하는 로그인 타입이 아니다.' })
  type: SignInType;

  @Field({ description: '이메일', nullable: true })
  email?: string;

  @Field({ description: '입력비밀번호', nullable: true })
  plainPassword?: string;

  @Field({ description: '소셜코드', nullable: true })
  code: string;

  @Field({ description: '디바이스아이디', nullable: true })
  deviceId: string;

  @Field({ description: '애플용유저정보', nullable: true })
  appleUser: string;

  @Field({ description: '애플용Nonce', nullable: true })
  appleNonce: string;

  /** 
  @Field({ nullable: true }) : 필드가 필수 요청이 아니고 널값도 가능.
  @Field({ nullable: false }) : 필드가 필수 요청이지만 널값은 가능.
  @Field({ nullable: false }) and @IsNotEmpty() : 필드도 요청사항이고 널값도 허용되지 않음.
  @Field({ nullable: true }) and @IsNotEmpty() : 널값이 허용이 안되기 때문에 필드가 꼭 포함 되어야 한다.
  @Field() 요청시 필드가 존재하는지만 체크
  @IsNotEmpty() 값만 체크.
  **/
}

// /**
//  * Dr.Kit
//  * this is mediio Dr.Kit api server
//  *
//  * The version of the OpenAPI document: 1.0.0
//  *
//  *
//  * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
//  * https://openapi-generator.tech
//  * Do not edit the class manually.
//  */

// import { Field, InputType } from '@nestjs/graphql';

// export type SignInType = 'EMAIL' | 'GOOGLE' | 'FACEBOOK' | 'NAVER' | 'KAKAO';
// @InputType()
// export class SignInDto {
//   @Field({ nullable: true })
//   email: string;

//   @Field({ nullable: true })
//   plainPassword: string;

//   @Field({ nullable: true })
//   code: string;

//   @Field({ nullable: false })
//   type: SignInType;
// }
